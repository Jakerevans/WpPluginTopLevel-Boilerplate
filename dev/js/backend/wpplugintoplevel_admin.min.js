/**
 * JavaScript Admin Functions - wpplugintoplevel-admin.min.js
 *
 * @author   Jake Evans
 * @category JavaScript
 * @package  Includes/Assets/Js
 * @version  6.0.0
 */

console.log( 'This is the JavaScript Object that holds all PHP Variables for use in the wpplugintoplevel Admin JavaScript file:' );
console.log( wppluginToplevelPhpVariables );


// All functions wrapped in jQuery( document ).ready()...
jQuery( document ).ready( function( $ ) {
	'use strict';

	/* BEGINNING SECTION TO CALL ALL FUNCTIONS IN FILE... */

	// Function to display the admin pointer message when entering the Question Mark image with mouse...
	wppluginToplevelAdminPointersJavascript();

	// Function that will handle the saving of the user's License Key.
	wppluginToplevelPluginPageDashboardSaveKey();

	// Function that will handle the saving of the user's License Key.
	function wppluginToplevelPluginPageDashboardSaveKey() {

		// When the 'Save' button is clicked at the top of the dashboard...
		$( '#wpplugin-extension-genreric-key-dashboard-form-toplevel' ).on( 'submit', function() {

			var license = $( '#wpplugin-extension-genreric-key-dashboard-input-toplevel' ).val();

			// Make Ajax call to get display options.
			var data = {
				'action': 'wpplugintoplevel_save_license_key_action',
				'security': wppluginToplevelPhpVariables.adminnonce1,
				'license': license
			};

			console.log(data);

			$.post( ajaxurl, data, function( response ) {

				document.location.reload( true );

			});


			event.preventDefault ? event.preventDefault() : event.returnValue = false;

		});

		// When the 'Save' button is clicked from the plugin's entry...
		$( '#wpplugin-extension-genreric-key-plugins-page-button-toplevel' ).on( 'click', function() {

			var license = $( this ).prev().val();

			// Make Ajax call to get display options.
			var data = {
				'action': 'wpplugintoplevel_save_license_key_action',
				'security': wppluginToplevelPhpVariables.adminnonce1,
				'license': license
			};

			console.log(data);

			$.post( ajaxurl, data, function( response ) {

				document.location.reload( true );

			});
			event.preventDefault ? event.preventDefault() : event.returnValue = false;
		});
	}


	/* ENDING SECTION TO CALL ALL FUNCTIONS IN FILE... */

	// Function to display the admin pointer message when entering the Question Mark image with mouse...
	function wppluginToplevelAdminPointersJavascript() {

		$( 'body' ).on( 'mouseenter', '.wpplugin-icon-image-question', function() {

			var label = $( this ).attr( 'data-label' );
			var pointer;

			// Switch for which admin message to display
			switch ( label ) {
			case 'book-form-isbn10':
				pointer = $( this ).pointer({
					content: '<h3>' + wppluginPhpVariables.trans135 + '</h3><p class="wpplugin-admin-pointer">' + wppluginPhpVariables.trans173 + '.</p>',
					position: {
						edge: 'right',
						align: 'right'
					}
				});
				break;
			default:
			}

			// Open the pointer on mouseenter.
			pointer.pointer( 'open' );

			// Close the pointer on mouseleave.
			$( 'body' ).on( 'mouseleave', '.wpplugin-icon-image-question', function() {
				pointer.pointer( 'close' );
			});

		});

		$( 'body' ).on( 'mouseenter', '.wpplugin-icon-image-question-with-link', function() {

			var label = $( this ).attr( 'data-label' );
			var pointer;

			// Switch for which admin message to display
			switch ( label ) {
			case 'book-form-libraries':
				pointer = $( this ).pointer({
					content: '<h3>' + wppluginPhpVariables.trans203 + '</h3><p class="wpplugin-admin-pointer">' + wppluginPhpVariables.trans204 + wppluginPhpVariables.SETTINGS_PAGE_URL + wppluginPhpVariables.trans205 + '.</p>',
					position: {
						edge: 'right',
						align: 'right'
					}
				});
				break;
			default:
			}

			// Open the pointer on mouseenter
			pointer.pointer( 'open' );

		});
	}
});
